# vireth_rle/plugins/topic_tagger_plugin.py

from vireth_rle.plugins.plugin_base import VirethPlugin
from vireth_rle.utils.display_utils import color_print  # ✅ Fixed import

class TopicTaggerPlugin(VirethPlugin):
    def register(self, model):
        def tag_topic(text):
            lowered = text.lower()
            if "logic" in lowered:
                topic = "Logic"
            elif "recursion" in lowered:
                topic = "Recursion"
            else:
                topic = "General"

            model.last_tagged_topic = topic  # ✅ Store for later access

            # ✅ Use shared color print
            color_map = {
                "Logic": "magenta",
                "Recursion": "cyan",
                "General": "gray"
            }
            color_print(f"[TopicTagger] Tagged topic: {topic}", color=color_map.get(topic, "gray"))
            return topic

        model.tag_topic = tag_topic
        color_print(f"[Plugin] {self.name()} registered successfully.", color="cyan")

    def description(self):
        return "Tags dominant topic in input."

def register(model):
    plugin = TopicTaggerPlugin()
    plugin.register(model)
